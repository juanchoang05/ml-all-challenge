version: '3.8'

services:
  # Aplicaci√≥n ML Core Platform
  ml-core-platform:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ml-core-platform-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - JAVA_OPTS=-Xmx512m -Xms256m
    volumes:
      - app-logs:/app/logs
    networks:
      - ml-network
    depends_on:
      - ml-database
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Base de datos PostgreSQL (opcional)
  ml-database:
    image: postgres:15-alpine
    container_name: ml-core-platform-db
    environment:
      - POSTGRES_DB=mlcoreplatform
      - POSTGRES_USER=mluser
      - POSTGRES_PASSWORD=mlpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mluser -d mlcoreplatform"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache (opcional)
  ml-redis:
    image: redis:7-alpine
    container_name: ml-core-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx como reverse proxy (opcional)
  ml-nginx:
    image: nginx:alpine
    container_name: ml-core-platform-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - ml-network
    depends_on:
      - ml-core-platform
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local

networks:
  ml-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
